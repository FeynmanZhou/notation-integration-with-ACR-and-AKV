name: test-notation-action

on:
  push:
    tags:
      - v*

env:
  NOTATION_EXPERIMENTAL: 1

jobs:
  setup-acr-and-akv:
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/reusable-acr-and-akv-setup.yml
    with:
      ACR_TO_RELEASE: testnotation.azurecr.io
      ACR_REPO_TO_RELEASE: integration
      ACR_USERNAME: testnotation
      AKV_NAME: testnotationAKV
    secrets:
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

  notation-setup-sign-verify:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v3
      # - name: prepare
      #   id: prepare
      #   run: |
      #     VERSION=${GITHUB_REF#refs/*/}
      #     BRANCH_NAME=${GITHUB_REF#refs/heads/}
      #     if [[ "${VERSION}" == "${BRANCH_NAME}" ]]; then
      #       VERSION=$(git rev-parse --short HEAD)
      #     fi
      #     echo ::set-output name=version::${VERSION}
      #     echo ::set-output name=ref::${{ env.ACR_TO_RELEASE }}/${{ env.ACR_REPO_TO_RELEASE }}:${VERSION}
      # - name: docker login
      #   uses: azure/docker-login@v1
      #   with:
      #     login-server: ${{ env.ACR_TO_RELEASE }}
      #     username: ${{ env.ACR_USERNAME }}
      #     password: ${{ env.ACR_PASSWORD }}
      # - name: docker build release
      #   run: |          
      #     docker build -t ${{ steps.prepare.outputs.ref }} .
      #     docker push ${{ steps.prepare.outputs.ref }}
      # - name: AKV login
      #   uses: Azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      # - name: setup AKV permissions
      #   env:
      #     AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      #     AKV_NAME: testnotationAKV
      #   run: |
      #     AZURE_SERVICE_PRINCIPLE_CLIENT_ID=$(echo $AZURE_CREDENTIALS | jq -r '.["clientId"]')
      #     AKV_SUBSCRIPTION_ID=$(echo $AZURE_CREDENTIALS | jq -r '.["subscriptionId"]')
      #     echo "::add-mask::$AZURE_SERVICE_PRINCIPLE_CLIENT_ID"
      #     echo "::add-mask::$AKV_SUBSCRIPTION_ID"
      #     az account set -s $AKV_SUBSCRIPTION_ID
      #     az keyvault set-policy -n ${{env.AKV_NAME}} --secret-permissions get list --key-permissions sign --certificate-permissions get --spn $AZURE_SERVICE_PRINCIPLE_CLIENT_ID
      - name: setup notation
        uses: shizhMSFT/setup-notation@main
        with:
          version: 1.0.0-rc.7
      - name: sign released artifact using key pair from AKV
        uses: Two-Hearts/notation-action/sign@sign
        with:
          plugin_name: azure-kv
          plugin_url: https://github.com/Azure/notation-azure-kv/releases/download/v1.0.0-rc.2/notation-azure-kv_1.0.0-rc.2_linux_amd64.tar.gz
          plugin_checksum: 4242054463089F4b04019805f2c009267dbcc9689e386BC88d3c4fc4E095e52c
          key_id: https://testnotationakv.vault.azure.net/keys/notationLeafCert/c585b8ad8fc542b28e41e555d9b3a1fd
          target_artifact_reference: ${{ needs.setup-acr-and-akv.outputs.target-artifact-reference }}
          signature_format: cose
          plugin_config: ca_certs=.github/cert-bundle/cert-bundle.crt
      - name: inspect signatures
        run: |
          notation inspect --allow-referrers-api ${{ needs.setup-acr-and-akv.outputs.target-artifact-reference }}
      - name: verify released artifact
        uses: Two-Hearts/notation-action/verify@verify
        with:
          target_artifact_reference: ${{ needs.setup-acr-and-akv.outputs.target-artifact-reference }}
          trust_policy: .github/trustpolicy/trustpolicy.json
          trust_store: .github/truststore